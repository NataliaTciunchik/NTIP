using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PCalcVar9_10
{
    class Control_
    {
        /*
         * Экземпляр класса Editor (редактор)
         * для записи левого операнда
        */
        public Editor LeftOperand = new Editor();

        /*
         * Экземпляр класса Editor (редактор)
         * для записи правого операнда
        */
        public Editor RightOperand = new Editor();

        /*
         * enum - перечислени (enumerate)
         * перечисляются ВОЗМОЖНЫЕ состояния калькулятора
         * LeftOperandEnter - ввод левого операнда
         * RightOperandEnter - ввод правого операнда
         * Execute - вычисление результата
        */
        public enum State { LeftOperandEnter, RightOperandEnter, Execute }

        /*
         * Переменная, где будет храниться
         * ТЕКУЩЕЕ состояние калькулятора
         * ТОЕСТЬ в любой момент ST будет равен
         * одному из состояний State!!!
        */
        public State St { get ; set ; }

        /*
         * enum - перечислени (enumerate)
         * перечисляются ВОЗМОЖНЫЕ оперции калькулятора
         * Add - сложение
         * Substract - вычитание
         * Multiply - умножение
         * Devide - деление
         * Undefined - БЕЗ опарации
        */
        public enum Operation { Add, Substract, Multiply, Devide, Undefined }

        /*
         * Переменная, где будет храниться
         * ТЕКУЩЕЕ состояние операции (+,-,/,*)
         * ТОЕСТЬ в любой момент Op будет равен
         * одному из состояний из Operation!!!
        */
        public Operation Op { get; set; }

        /*
         * Начальная система счисления
         * при запуске калькулятора!!!
         * 
         * Имеет 2 метода get и set
         * set: (назначить)
         * при обращении PIN = 2
         * значение 10 поменяется на 2...
         * 
         * get: (получить)
         * При обращении например
         * Console.Write(PIN); выведет текущее
         * значение переменной
        */
        public int PIN { get; set; } = 10;

        /*
         * Конструктор класса
         * Срабатывает при вызове
         * new Control_()
         * один такой вызов создает полную
         * копию всех полей свойств данного
         * класса (Control_.cs).
         * ТОЕСТЬ появляются поля RightOperand,
         * LeftOperand, PIN = 10... и т.д.
         * ТАКЖЕ при new Control_() задаются начальные
         * состояния калькулятора
         * ST = ВВод левого операнда (State.LeftOperandEnter)
         * Op = операции нет (Operation.Undefined)
        */
        public Control_()
        {
            St = State.LeftOperandEnter;
            Op = Operation.Undefined;
        }

        /*
         * Метод DoCmd класса Control_
         * Принимает команды из главного
         * окошечка (Form1.cs)
         * И выполняет операции в 
         * соответсвии с описанием в 
         * case.
        */
        public string DoCmd(int j)
        {
            switch (j)
            {
                /*
                 * Case с 0 - 19
                 * данные команды передаются
                 * в класс Editor(файл Editor.cs),
                 * т.к. являются командами
                 * редактированиями
                 * также тут проверяется какой операнд
                 * сейчас редактируется, и в зависимости
                 * от этого вызывается редактор для 
                 * нужного операнда
                 * что за команды 0-19 смотреть нуна
                 * в файлике Editor.cs
                 */
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                    if (St == State.LeftOperandEnter)
                        return LeftOperand.DoEdit(j);
                    if (St == State.RightOperandEnter)
                        return RightOperand.DoEdit(j);
                    break;
                case 20:
                    /*
                     * Команда 20 является командой
                     * установки + в поле operator
                     * тоесть к выражению будет применяться
                     * операция сложения...
                    */
                    Op = Operation.Add;
                    return "+";
                case 21:
                    /*
                     * Команда 21 является командой
                     * установки - в поле operator
                     * тоесть к выражению будет применяться
                     * операция вычитания...
                    */
                    Op = Operation.Substract;
                    return "-";
                case 22:
                    /*
                     * Команда 22 является командой
                     * установки * в поле operator
                     * тоесть к выражению будет применяться
                     * операция умножения...
                    */
                    Op = Operation.Multiply;
                    return "*";
                case 23:
                    /*
                     * Команда 23 является командой
                     * установки / в поле operator
                     * тоесть к выражению будет применяться
                     * операция деления...
                    */
                    Op = Operation.Devide;
                    return "/";
                case 24:
                    /*
                     * Команда 24 является командой
                     * смены вводимого операнда...
                     * если вводился левый, переключит
                     * на ввод правого и наоборот
                     * клавиша TAB на калькуляторе
                    */
                    if (St == State.LeftOperandEnter)
                        St = State.RightOperandEnter;
                    else
                        St = State.LeftOperandEnter;
                    break;
                case 25:
                    /*
                     * Команда 25 является командой
                     * выполнения вычисления
                    */
                    /*
                     * Если количество символов 
                     * левого или правого операнда равно 0
                     * то вычисление не производиться.
                    */
                    if (LeftOperand.Number.Length == 0 || RightOperand.Number.Length == 0)
                        break;
                    /*
                     * Если введен левый и правый операнд
                     * перевеодим калькулятор в состояние
                     * вычисления
                    */
                    St = State.Execute;
                    /*
                     * Переводим в 10ичную систему оба операнда
                     * для того что бы произвести операцию
                    */
                    double leftOperand = Convertor_P_10.dval(LeftOperand.Number, PIN);
                    double rightOperand = Convertor_P_10.dval(RightOperand.Number, PIN);
                    /*
                     * acc - количество знаков после запятой
                    */
                    int acc = 0;
                    /*
                     * accLeft - массив который получается путем
                     * разделения строки по ,
                     * П. 12,45 в accLeft будет массив из
                     * двух элементов [12 , 45 ]
                     * тобишь целая и дробная части числа
                     * ЕСЛИ число будет 15(например) то
                     * массив будет состоять из одного
                     * элемента [15] тобишь только целая
                     * часть числа
                     */
                    string[] accLeft = leftOperand.ToString().Split(',');
                    /*
                     * accRight - массив который получается путем
                     * разделения строки по ,
                     * П. 12,45 в accRight будет массив из
                     * двух элементов [12 , 45 ]
                     * тобишь целая и дробная части числа
                     * ЕСЛИ число будет 15(например) то
                     * массив будет состоять из одного
                     * элемента [15] тобишь только целая
                     * часть числа
                     */
                    string[] accRight = rightOperand.ToString().Split(',');
                    /*
                     * Проверяется есть ли у левого
                     * операнда дробная часть?
                     * ТОЕСТЬ если массив состоит
                     * из двух элементов, то 
                     * дробная часть есть...
                     * если из одного элемента то
                     * дробной части нет.
                     * ЕСЛИ есть тогда записывается
                     * сколько символов их длина
                     * ЕСЛИ нет тогда ниче не делается
                    */
                    if (accLeft.Length == 2)
                        acc = accLeft[1].Length;
                    /*
                     * Проверяется есть ли у левого
                     * операнда дробная часть?
                     * ТОЕСТЬ если массив состоит
                     * из двух элементов, то 
                     * дробная часть есть...
                     * если из одного элемента то
                     * дробной части нет.
                     * Если есть то сравнивается с
                     * переменной acc, а вней либо
                     * 0 либа длина дробной части
                     * левого операнда
                     * Если длина дробной части
                     * правого операнда больше
                     * длины текущей acc, тогда в
                     * acc записывается длина дробной
                     * части правого операнда
                    */
                    if (accRight.Length == 2)
                        if (accRight[1].Length > acc)
                            acc = accRight[1].Length;
                    /*
                     * переменная для записи результата
                     * выполнения операции
                    */
                    string result = "";
                    /*
                     * В зависимости от операции
                     * применяется свое действие...
                    */
                    switch(Op)
                    {
                        case Operation.Add:
                            /*
                             * Если сложение то:
                             * вызываем метод класса
                             * Convertor_10_P.DO в который
                             * передается число для перевода
                             * из 10 в P-ичную, P-ичная система
                             * в которую надо перевести число
                             * и acc количество знаков после
                             * запятой.
                             * ТОЕСТЬ тута мы передаем
                             * левый операнд + правый операнд
                             * они в 10 системе счисления, а компуктер
                             * умеет складывать такие числа и без нас...
                             * он их сложит, потом переведет в систему
                             * счисления которая указана в PIN
                             * и округлит до количества знаков
                             * указанных в acc
                             * и запишет в переменную result
                            */
                            result = Convertor_10_P.Do(leftOperand + rightOperand, PIN, acc);
                            break;
                        case Operation.Substract:
                            /*
                             * Если вычитание то:
                             * вызываем метод класса
                             * Convertor_10_P.DO в который
                             * передается число для перевода
                             * из 10 в P-ичную, P-ичная система
                             * в которую надо перевести число
                             * и acc количество знаков после
                             * запятой.
                             * ТОЕСТЬ тута мы передаем
                             * левый операнд - правый операнд
                             * они в 10 системе счисления, а компуктер
                             * умеет вычитать такие числа и без нас...
                             * он их вычтет, потом переведет в систему
                             * счисления которая указана в PIN
                             * и округлит до количества знаков
                             * указанных в acc
                             * и запишет в переменную result
                            */
                            result = Convertor_10_P.Do(leftOperand - rightOperand, PIN, acc);
                            break;
                        case Operation.Multiply:
                            /*
                             * Если умножение то:
                             * вызываем метод класса
                             * Convertor_10_P.DO в который
                             * передается число для перевода
                             * из 10 в P-ичную, P-ичная система
                             * в которую надо перевести число
                             * и acc количество знаков после
                             * запятой.
                             * ТОЕСТЬ тута мы передаем
                             * левый операнд * правый операнд
                             * они в 10 системе счисления, а компуктер
                             * умеет умножать такие числа и без нас...
                             * он их перемножит, потом переведет в систему
                             * счисления которая указана в PIN
                             * и округлит до количества знаков
                             * указанных в acc
                             * и запишет в переменную result
                            */
                            result = Convertor_10_P.Do(leftOperand * rightOperand, PIN, acc);
                            break;                                
                        case Operation.Devide:
                            /*
                             * Если деление то:
                             * вызываем метод класса
                             * Convertor_10_P.DO в который
                             * передается число для перевода
                             * из 10 в P-ичную, P-ичная система
                             * в которую надо перевести число
                             * и acc количество знаков после
                             * запятой.
                             * ТОЕСТЬ тута мы передаем
                             * левый операнд / правый операнд
                             * они в 10 системе счисления, а компуктер
                             * умеет делить такие числа и без нас...
                             * он их поделит, потом переведет в систему
                             * счисления которая указана в PIN
                             * и округлит до количества знаков
                             * указанных в acc
                             * и запишет в переменную result
                            */
                            result = Convertor_10_P.Do(leftOperand / rightOperand, PIN, acc);
                            break;
                    }
                    /*
                     * После того какрезультат найден
                     * состояние калькулятора переключается
                     * в ввод левого операнда!
                    */
                    St = State.LeftOperandEnter;
                    /*
                     * Возвращаем результат выполнения вычисления 
                     * в Form1.cs (он ж нас и вызвал для этого)
                    */
                    return result;
                default:
                    /*
                     * Сюда никогда не войдет, если кто-нить не на
                     * костылит... но стандарт требует дефолт метода
                     * он сработает если пришло например 1245...
                    */
                    break;
            }
            /*
             * Сюда тоже никогда не дойдет... но стандарт требует
             * что бы все ветви кода в методе, возвращали значение
             * но если все таки дайдет... то в главное окно вернется
             * пустая строка
            */
            return "";
        }
    }
}
